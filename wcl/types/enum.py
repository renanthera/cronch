from ..query import GQL_ENUM

"""
ENUM TYPES
THIS FILE IS GENERATED BY `wcl/query.py`.
"""

class GQL_RankingCompareType( GQL_ENUM ):
  enum_values = [
    'Rankings', # Compare against rankings.
    'Parses',   # Compare against all parses in a two week window.
  ]

class GQL_CharacterRankingMetricType( GQL_ENUM ):
  enum_values = [
    'bosscdps',               # Boss cDPS is unique to FFXIV and is damage done to the boss adjusted for raid-contributing buffs and debuffs.
    'bossdps',                # Boss damage per second.
    'bossndps',               # Boss nDPS is unique to FFXIV and is damage done to the boss adjusted for raid-contributing buffs and debuffs.
    'bossrdps',               # Boss rDPS is unique to FFXIV and is damage done to the boss adjusted for raid-contributing buffs and debuffs.
    'default',                # Choose an appropriate default depending on the other selected parameters.
    'dps',                    # Damage per second.
    'hps',                    # Healing per second.
    'krsi',                   # Survivability ranking for tanks. Deprecated. Only supported for some older WoW zones.
    'playerscore',            # Score. Used by WoW Mythic dungeons and by ESO trials.
    'playerspeed',            # Speed. Not supported by every zone.
    'cdps',                   # cDPS is unique to FFXIV and is damage done adjusted for raid-contributing buffs and debuffs.
    'ndps',                   # nDPS is unique to FFXIV and is damage done adjusted for raid-contributing buffs and debuffs.
    'rdps',                   # rDPS is unique to FFXIV and is damage done adjusted for raid-contributing buffs and debuffs.
    'tankhps',                # Healing done per second to tanks.
    'wdps',                   # Weighted damage per second. Unique to WoW currently. Used to remove pad damage and reward damage done to high priority targets.
    'healercombineddps',      # Unique to FFXIV. Represents the combined ranking for a pair of healers in eight player content.
    'healercombinedbossdps',  # Unique to FFXIV. Represents the combined ranking for a pair of healers in eight player content.
    'healercombinedcdps',     # Unique to FFXIV. Represents the combined ranking for a pair of healers in eight player content.
    'healercombinedbosscdps', # Unique to FFXIV. Represents the combined ranking for a pair of healers in eight player content.
    'healercombinedndps',     # Unique to FFXIV. Represents the combined ranking for a pair of healers in eight player content.
    'healercombinedbossndps', # Unique to FFXIV. Represents the combined ranking for a pair of healers in eight player content.
    'healercombinedrdps',     # Unique to FFXIV. Represents the combined ranking for a pair of healers in eight player content.
    'healercombinedbossrdps', # Unique to FFXIV. Represents the combined ranking for a pair of healers in eight player content.
    'tankcombineddps',        # Unique to FFXIV. Represents the combined ranking for a pair of tanks in eight player content.
    'tankcombinedbossdps',    # Unique to FFXIV. Represents the combined ranking for a pair of tanks in eight player content.
    'tankcombinedcdps',       # Unique to FFXIV. Represents the combined ranking for a pair of tanks in eight player content.
    'tankcombinedbosscdps',   # Unique to FFXIV. Represents the combined ranking for a pair of tanks in eight player content.
    'tankcombinedndps',       # Unique to FFXIV. Represents the combined ranking for a pair of tanks in eight player content.
    'tankcombinedbossndps',   # Unique to FFXIV. Represents the combined ranking for a pair of tanks in eight player content.
    'tankcombinedrdps',       # Unique to FFXIV. Represents the combined ranking for a pair of tanks in eight player content.
    'tankcombinedbossrdps',   # Unique to FFXIV. Represents the combined ranking for a pair of tanks in eight player content.
  ]

class GQL_RoleType( GQL_ENUM ):
  enum_values = [
    'Any',    # Fetch any role..
    'DPS',    # Fetch the DPS role only.
    'Healer', # Fetch the healer role only.
    'Tank',   # Fetch the tanking role only.
  ]

class GQL_RankingTimeframeType( GQL_ENUM ):
  enum_values = [
    'Today',      # Compare against today's rankings.
    'Historical', # Compare against historical rankings.
  ]

class GQL_LeaderboardRank( GQL_ENUM ):
  enum_values = [
    'Any',      # All ranks are included.
    'LogsOnly', # Only include ranks with a backing log.
  ]

class GQL_HardModeLevelRankFilter( GQL_ENUM ):
  enum_values = [
    'Any',        # Any hard mode level (including normal mode).
    'Highest',    # The highest hard mode level. Convenience alias for hard mode level 4.
    'NormalMode', # The normal (non-hard) mode level. Convenience alias for hard mode level 0.
    'Level0',     # Hard mode level 0.
    'Level1',     # Hard mode level 1.
    'Level2',     # Hard mode level 2.
    'Level3',     # Hard mode level 3.
    'Level4',     # Hard mode level 4.
  ]

class GQL_ExternalBuffRankFilter( GQL_ENUM ):
  enum_values = [
    'Any',     # Include all ranks, regardless of external buffs.
    'Require', # Only include ranks that DO CONTAIN external buffs.
    'Exclude', # Only include ranks that DO NOT CONTAIN external buffs.
  ]

class GQL_FightRankingMetricType( GQL_ENUM ):
  enum_values = [
    'default',   # Choose an appropriate default depending on the other selected parameters.
    'execution', # A metric that rewards minimizing deaths and damage taken.
    'feats',     # Feats of strength in WoW or Challenges in FF.
    'score',     # For Mythic+ dungeons in WoW, represents the team's score. Used for ESO trials and dungeons also.
    'speed',     # Speed metric, based off the duration of the fight.
    'progress',  # Progress metric, based off when the fight was defeated.
  ]

class GQL_GuildRank( GQL_ENUM ):
  enum_values = [
    'NonMember',   # The user is not a member of this guild or team.
  ]

class GQL_EventDataType( GQL_ENUM ):
  enum_values = [
    'All',           # All Events
    'Buffs',         # Buffs.
    'Casts',         # Casts.
    'CombatantInfo', # Combatant info events (includes gear).
    'DamageDone',    # Damage done.
    'DamageTaken',   # Damage taken.
    'Deaths',        # Deaths.
    'Debuffs',       # Debuffs.
    'Dispels',       # Dispels.
    'Healing',       # Healing done.
    'Interrupts',    # Interrupts.
    'Resources',     # Resources.
    'Summons',       # Summons
    'Threat',        # Threat.
  ]

class GQL_HostilityType( GQL_ENUM ):
  enum_values = [
    'Friendlies', # Fetch information for friendlies.
    'Enemies',    # Fetch information for enemies.
  ]

class GQL_KillType( GQL_ENUM ):
  enum_values = [
    'All',        # Include trash and encounters.
    'Encounters', # Only include encounters (kills and wipes).
    'Kills',      # Only include encounters that end in a kill.
    'Trash',      # Only include trash.
    'Wipes',      # Only include encounters that end in a wipe.
  ]

class GQL_GraphDataType( GQL_ENUM ):
  enum_values = [
    'Summary',       # Summary Overview
    'Buffs',         # Buffs.
    'Casts',         # Casts.
    'DamageDone',    # Damage done.
    'DamageTaken',   # Damage taken.
    'Deaths',        # Deaths.
    'Debuffs',       # Debuffs.
    'Dispels',       # Dispels.
    'Healing',       # Healing done.
    'Interrupts',    # Interrupts.
    'Resources',     # Resources.
    'Summons',       # Summons
    'Survivability', # Survivability (death info across multiple pulls).
    'Threat',        # Threat.
  ]

class GQL_ViewType( GQL_ENUM ):
  enum_values = [
    'Default', # Use the same default that the web site picks based off the other selected parameters.
    'Ability', # View by ability.
    'Source',  # View. by source.
    'Target',  # View by target.
  ]

class GQL_ReportRankingMetricType( GQL_ENUM ):
  enum_values = [
    'bossdps',     # Boss damage per second.
    'bossrdps',    # Boss rDPS is unique to FFXIV and is damage done to the boss adjusted for raid-contributing buffs and debuffs.
    'default',     # Choose an appropriate default depending on the other selected parameters.
    'dps',         # Damage per second.
    'hps',         # Healing per second.
    'krsi',        # Survivability ranking for tanks. Deprecated. Only supported for some older WoW zones.
    'playerscore', # Score. Used by WoW Mythic dungeons and by ESO trials.
    'playerspeed', # Speed. Not supported by every zone.
    'rdps',        # rDPS is unique to FFXIV and is damage done adjusted for raid-contributing buffs and debuffs.
    'tankhps',     # Healing done per second to tanks.
    'wdps',        # Weighted damage per second. Unique to WoW currently. Used to remove pad damage and reward damage done to high priority targets.
  ]

class GQL_TableDataType( GQL_ENUM ):
  enum_values = [
    'Summary',       # Summary Overview
    'Buffs',         # Buffs.
    'Casts',         # Casts.
    'DamageDone',    # Damage done.
    'DamageTaken',   # Damage taken.
    'Deaths',        # Deaths.
    'Debuffs',       # Debuffs.
    'Dispels',       # Dispels.
    'Healing',       # Healing done.
    'Interrupts',    # Interrupts.
    'Resources',     # Resources.
    'Summons',       # Summons
    'Survivability', # Survivability (death info across multiple pulls).
    'Threat',        # Threat.
  ]

class GQL___TypeKind( GQL_ENUM ):
  enum_values = [
    'SCALAR',       # Indicates this type is a scalar.
    'OBJECT',       # Indicates this type is an object. `fields` and `interfaces` are valid fields.
    'INTERFACE',    # Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.
    'UNION',        # Indicates this type is a union. `possibleTypes` is a valid field.
    'ENUM',         # Indicates this type is an enum. `enumValues` is a valid field.
    'INPUT_OBJECT', # Indicates this type is an input object. `inputFields` is a valid field.
    'LIST',         # Indicates this type is a list. `ofType` is a valid field.
    'NON_NULL',     # Indicates this type is a non-null. `ofType` is a valid field.
  ]

class GQL___DirectiveLocation( GQL_ENUM ):
  enum_values = [
    'QUERY',                  # Location adjacent to a query operation.
    'MUTATION',               # Location adjacent to a mutation operation.
    'SUBSCRIPTION',           # Location adjacent to a subscription operation.
    'FIELD',                  # Location adjacent to a field.
    'FRAGMENT_DEFINITION',    # Location adjacent to a fragment definition.
    'FRAGMENT_SPREAD',        # Location adjacent to a fragment spread.
    'INLINE_FRAGMENT',        # Location adjacent to an inline fragment.
    'VARIABLE_DEFINITION',    # Location adjacent to a variable definition.
    'SCHEMA',                 # Location adjacent to a schema definition.
    'SCALAR',                 # Location adjacent to a scalar definition.
    'OBJECT',                 # Location adjacent to an object type definition.
    'FIELD_DEFINITION',       # Location adjacent to a field definition.
    'ARGUMENT_DEFINITION',    # Location adjacent to an argument definition.
    'INTERFACE',              # Location adjacent to an interface definition.
    'UNION',                  # Location adjacent to a union definition.
    'ENUM',                   # Location adjacent to an enum definition.
    'ENUM_VALUE',             # Location adjacent to an enum value definition.
    'INPUT_OBJECT',           # Location adjacent to an input object type definition.
    'INPUT_FIELD_DEFINITION', # Location adjacent to an input object field definition.
  ]

class GQL_SubscriptionStatus( GQL_ENUM ):
  enum_values = [
    'Silver',         # Silver Tier subscription
    'Gold',           # Gold Tier subscription
    'Platinum',       # Platinum Tier subscription
    'LegacySilver',   # Legacy Silver Tier subscription
    'LegacyGold',     # Legacy Gold Tier subscription
    'LegacyPlatinum', # Legacy Platinum Tier subscription
  ]